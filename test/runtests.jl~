using octsock5
using Base.Test
function runTwoProcess(args::String)
    #juliaDotExe::String = "c:/julia/bin/julia.exe";
    #call1::String = juliaDotExe * " main.jl server " * args;
    #call2::String = juliaDotExe * " main.jl client " * args;
    
    # start server process
    #print(pwd(), "\n", call1, "\n");
    a1::Tuple = open(`c:/julia/bin/julia.exe main.jl server $args`);

    # wait until server is up
    error("x");
    resp1::String = readline(a1[1]);
    assert(contains(resp1, "STARTUP_DONE"));

    # start client process
    a2::Tuple = open(`c:/julia/bin/julia.exe main.jl client $args`);
    resp2::String = readline(a1[1]);
    assert(contains(resp2, "STARTUP_DONE"));
    
    # read all output
    resp1 .* readstring(a1[2]);
    resp2 .* readstring(a2[2]);

    # clean shutdown
    close(a1[1]);
    close(a2[1]);
    return (resp1, resp2)
end
function runLatency()
    (a,b) = runTwoProcess("roundtrip");
    print(a,b)
    return true
end
function runThroughput()
    runTwoProcess("throughput")
    return true
end
@test runLatency();

